// <auto-generated />
using System;
using HealthMonitorApp.Data;
using HealthMonitorApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthMonitorApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231002140810_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("HealthMonitorApp.Models.ApiEndpoint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ApiGroupID")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExpectedStatusCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiceStatusID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("cURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ApiGroupID");

                    b.HasIndex("ServiceStatusID")
                        .IsUnique();

                    b.ToTable("ApiEndpoints");
                });

            modelBuilder.Entity("HealthMonitorApp.Models.ApiGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ApiGroups");
                });

            modelBuilder.Entity("HealthMonitorApp.Models.ServiceStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApiEndpointID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CheckedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHealthy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponseContent")
                        .HasColumnType("TEXT");

                    b.Property<double>("ResponseTime")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("ServiceStatuses");
                });

            modelBuilder.Entity("HealthMonitorApp.Models.ServiceStatusHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CheckedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHealthy")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ResponseTime")
                        .HasColumnType("REAL");

                    b.Property<int>("ServiceStatusID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ServiceStatusID");

                    b.ToTable("ServiceStatusHistories");
                });

            modelBuilder.Entity("HealthMonitorApp.Models.ApiEndpoint", b =>
                {
                    b.HasOne("HealthMonitorApp.Models.ApiGroup", "ApiGroup")
                        .WithMany("ApiEndpoints")
                        .HasForeignKey("ApiGroupID")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("HealthMonitorApp.Models.ServiceStatus", "ServiceStatus")
                        .WithOne("ApiEndpoint")
                        .HasForeignKey("HealthMonitorApp.Models.ApiEndpoint", "ServiceStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiGroup");

                    b.Navigation("ServiceStatus");
                });

            modelBuilder.Entity("HealthMonitorApp.Models.ServiceStatusHistory", b =>
                {
                    b.HasOne("HealthMonitorApp.Models.ServiceStatus", "ServiceStatus")
                        .WithMany("ServiceStatusHistories")
                        .HasForeignKey("ServiceStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceStatus");
                });

            modelBuilder.Entity("HealthMonitorApp.Models.ApiGroup", b =>
                {
                    b.Navigation("ApiEndpoints");
                });

            modelBuilder.Entity("HealthMonitorApp.Models.ServiceStatus", b =>
                {
                    b.Navigation("ApiEndpoint")
                        .IsRequired();

                    b.Navigation("ServiceStatusHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
